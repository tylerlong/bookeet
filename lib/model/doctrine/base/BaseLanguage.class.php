<?php

/**
 * BaseLanguage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $code
 * @property string $name
 * @property string $localized_name
 * @property Doctrine_Collection $translations
 * 
 * @method string              getCode()           Returns the current record's "code" value
 * @method string              getName()           Returns the current record's "name" value
 * @method string              getLocalizedName()  Returns the current record's "localized_name" value
 * @method Doctrine_Collection getTranslations()   Returns the current record's "translations" collection
 * @method Language            setCode()           Sets the current record's "code" value
 * @method Language            setName()           Sets the current record's "name" value
 * @method Language            setLocalizedName()  Sets the current record's "localized_name" value
 * @method Language            setTranslations()   Sets the current record's "translations" collection
 * 
 * @package    bookeet
 * @subpackage model
 * @author     Peter Long  http://peterlong.info
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLanguage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('language');
        $this->hasColumn('code', 'string', 2, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 2,
             ));
        $this->hasColumn('name', 'string', 63, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 63,
             ));
        $this->hasColumn('localized_name', 'string', 63, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 63,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Translation as translations', array(
             'local' => 'id',
             'foreign' => 'language_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}